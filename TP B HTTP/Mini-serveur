from socketserver import TCPServer, StreamRequestHandler
from datetime import datetime
# On définit une classe qui gère une connexion client.
# Elle hérite de StreamRequestHandler, qui fournit wfile (sortie) et rfile (entrée).
class MonHandler(StreamRequestHandler):
    def handle(self):
        # Ici on peut lire avec self.rfile.readline() ou écrire avec self.wfile.write()
        
        ligne = self.rfile.readline().decode().strip()
        print("Ligne de requête :", ligne)

        methode, chemin, version = ligne.split()
        print("Méthode :", methode)
        print("Chemin demandé :", chemin)
        print("Version HTTP :", version)

        corps = ""
        if chemin == "/motd":
                corps = "Bienvenue chez CanaDuck !"
        elif chemin == "/date":

                corps = f"Nous sommes le {datetime.now().strftime('%A %d %B %Y, %H:%M:%S')}"
        else:
                corps = """HTTP/1.1 200 OK 
Content-Type: text/plain 
Connection: close 

Hello World!""" 

        self.wfile.write(corps.encode())
        # Création du serveur, lié à l'adresse et au port (ici toutes interfaces, port 63000).
        # À chaque nouvelle connexion, une instance de MonHandler sera créée.
        
server = TCPServer(("", 8080), MonHandler)
# Lancement du serveur : boucle infinie qui accepte les connexions
server.serve_forever()
